services:
  postgres:
    image: postgres:14
    restart: always
    volumes:
      - ./vols/pgdata:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

  redis:
    image: redis:6.2
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "${REDIS_PASSWORD}"
    volumes:
      - ./vols/redis:/var/lib/redis/data
#      - ./vols/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    env_file:
      - .env

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.1
    restart: always
    volumes:
      - ./vols/esdata:/usr/share/elasticsearch/data
    environment:
#      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
    ports:
      - '9200:9200'
      - '9300:9300'

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.1
    restart: always
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#      - ELASTICSEARCH_USERNAME=kibana_system
#      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    depends_on:
      - elasticsearch

  backend:
    image: '${DOCKER_IMAGE_BACKEND}:${TAG-latest}'
    restart: always
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}
      - USERS_OPEN_REGISTRATION=${USERS_OPEN_REGISTRATION}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - POSTGRES_SERVER=${POSTGRES_SERVER}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_SERVER=${REDIS_SERVER}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ELASTICSEARCH_SERVER=${ELASTICSEARCH_SERVER}
      - ELASTICSEARCH_PORT=${ELASTICSEARCH_PORT}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}

    build:
      context: ./backend
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
